openapi: 3.0.3
info:
  title: Music band service REST endpoints
  description: The service manages a collection of objects. Music Band objects must be stored in the collection.
  version: 1.0.0
#servers:
#  - url: 'https://localhost:45382/api/v1'
paths:
  # CRUD
  /musicBands:
    get:
      summary: Get list of Music Bands
      description: Get list of Music Bands
      operationId: getMusicBands
      parameters:
        - name: sort
          in: query
          description: Array of fields that are used for sorting. The "-" sign means sorting in descending order. If queries and deletion order are provided for one field (with and without "-"), an error response will be returned.
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              default: id
              enum:
                - id
                - name
                - coordinates.x
                - coordinates.y
                - creationDate
                - numberOfParticipants
                - description
                - genre
                - label.name
                - -id
                - -name
                - -coordinates.x
                - -coordinates.y
                - -creationDate
                - -numberOfParticipants
                - -description
                - -genre
                - -label.name
        - name: filter
          in: query
          required: false
          description: Array of fields used for filtering. Each element must contain the name of the music band and the filtering method in parentheses, as well as the value that will be used for filtering. If the value type is incorrect, an error response will be returned.
          schema:
            type: array
            items:
              type: string
              example: id[eq]=1
              pattern: '^(id|name|coordinates\.x|coordinates\.y|creationDate|numberOfParticipants|description|genre|label\.name)\[(eq|ne|gt|lt|lte|gte)\]=.+$'
          style: deepObject
          explode: true
        - name: page
          in: query
          required: false
          description: Specifies the page number to be paginated. If used without the "pageSize" parameter, the page size will be 10. If none of the parameters "page" or "pageSize" is used, then all Flats will be returned.
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: pageSize
          in: query
          required: false
          description: The specified page size for pagination. If used without the "page" parameter, the first page will be displayed. If none of the parameters "page" or "pageSize" is used, then all Flats will be returned.
          schema:
            type: integer
            default: 10
            minimum: 1
      tags:
        - Catalog
      responses:
        '200':
          description: Returns an array of flats based on the specified parameters
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/MusicBandsAllFieldsSchema'
        '400':
            description: Invalid query param
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            code:
                                type: integer
                                format: int32
                                example: 400
                            message:
                                type: string
                                example: Invalid query param value
                            time:
                                type: string
                                format: date-time
                                example: 2022-09-19T00:00:09Z
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 500
                  message:
                    type: string
                    example: Internal server error
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        default:
          description: Returns error code, message and time in case of error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Add new music band
      description: Add new music band
      operationId: addMusicBand
      tags:
        - Catalog
      requestBody:
        required: true
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/MusicBandExtraFieldSchema'
      responses:
        '200':
          description: Returns the music band that was just added
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/MusicBandAllFieldsSchema'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 400
                  message:
                    type: string
                    example: Name не может быть пустым!
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        '405':
          description: Validation exception
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 405
                  message:
                    type: string
                    example: Validation exception
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 500
                  message:
                    type: string
                    example: Internal server error
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        default:
          description: Returns error code, message and time in case of error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /musicBands/{id}:
    get:
      summary: Get existing music band by id
      description: Get existing music band by id
      operationId: getMusicBand
      parameters:
        - name: id
          in: path
          required: true
          description: Music band id to find
          schema:
            type: integer
            format: int64
            nullable: false
            minimum: 0
            exclusiveMinimum: true
            example: 1
      tags:
        - Catalog
      responses:
        '200':
          description: Returns music band by id
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/MusicBandAllFieldsSchema'
        '400':
          description: Invalid param supplied
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 400
                  message:
                    type: string
                    example: Invalid param supplied
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 500
                  message:
                    type: string
                    example: Internal server error
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        default:
          description: Returns error code, message and time in case of error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update existing music band by id
      description: Update existing music band by id
      operationId: updateMusicBand
      parameters:
        - name: id
          in: path
          required: true
          description: Music Band id to update
          schema:
            type: integer
            format: int64
            nullable: false
            minimum: 0
            exclusiveMinimum: true
            example: 1
      tags:
        - Catalog
      requestBody:
        required: true
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/MusicBandExtraFieldSchema'
      responses:
        '200':
          description: Returns an updated music band
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/MusicBandAllFieldsSchema'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 400
                  message:
                    type: string
                    example: Name не может быть пустым!
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        '405':
          description: Validation exception
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 405
                  message:
                    type: string
                    example: Validation exception
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 500
                  message:
                    type: string
                    example: Internal server error
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        default:
          description: Returns error code, message and time in case of error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete existing music band by id
      description: Delete existing music band by id
      operationId: deleteMusicBand
      parameters:
        - name: id
          in: path
          required: true
          description: Music band id to delete
          schema:
            type: integer
            format: int64
            nullable: false
            minimum: 0
            exclusiveMinimum: true
            example: 1
      tags:
        - Catalog
      responses:
        '204':
          description: The music band was successfully deleted
          content:
            application/xml:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 204
                  message:
                    type: string
                    example: The music band was successfully deleted
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        '400':
          description: Invalid id value
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 400
                  message:
                    type: string
                    example: Invalid id value
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 500
                  message:
                    type: string
                    example: Internal server error
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        default:
          description: Returns error code, message and time in case of error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # Extra operations
  /musicBands/average-numberOfParticipants:
    get:
      summary: Get average number of participants for all music bands
      description: Get average number of participants for all music bands
      operationId: getMusicBandsAverageNumberOfParticipants
      tags:
        - Catalog
      responses:
        '200':
          description: Returns the average value of the number of participants
          content:
            application/xml:
              schema:
                type: number
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 500
                  message:
                    type: string
                    example: Internal server error
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        default:
          description: Returns error code, message and time in case of error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /musicBands/nameGroups:
    get:
      summary: Get the number of repetitions for each Name value
      description: Get the number of repetitions for each Name value
      operationId: getNameGroups
      tags:
        - Catalog
      responses:
        '200':
          description: Returns list of numbers of each Name value
          content:
            application/xml:
                schema:
                  type: array
                  items:
                    type: integer
                    format: int32
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 500
                  message:
                    type: string
                    example: Internal server error
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        default:
          description: Returns error code, message and time in case of error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /musicBands/bandByNameSubstring/{nameSubstring}:
    get:
      summary: Return an array of music bands whose name field value starts with the specified substring
      description: Return an array of music bands whose name field value starts with the specified substring
      operationId: getBandByNameSubstring
      parameters:
        - name: nameSubstring
          in: path
          required: true
          description: Substring of the name to search
          schema:
            $ref: '#/components/schemas/MusicBandsAllFieldsSchema'
      tags:
        - Catalog
      responses:
        '204':
          description: Found music bands
          content:
            application/xml:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 204
                  message:
                    type: string
                    example: Found music bands
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        '400':
          description: Invalid name substring value
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 400
                  message:
                    type: string
                    example: Invalid name substring value
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 500
                  message:
                    type: string
                    example: Internal server error
                  time:
                    type: string
                    format: date-time
                    example: 2022-09-19T00:00:09Z
        default:
          description: Returns error code, message and time in case of error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

# Models
components:
  schemas:
    MusicGenre :
      type: string
      enum:
        - ROCK
        - RAP
        - POST_ROCK
        - PUNK_ROCK
      nullable: true
      example: ROCK
    Label:
      type: object
      properties:
        name:
          type: string
          example: National
    Coordinates:
      type: object
      properties:
        x:
          type: number
          format: float
          nullable: false
          minimum: -530
        y:
          type: number
          format: double
    MusicBandExtraFieldSchema:
      type: object
      properties:
        name:
          type: string
          nullable: false
          minLength: 1
          example: My lovely music band
        coordinates:
          $ref: '#/components/schemas/Coordinates'
          nullable: false
        numberOfParticipants:
          type: integer
          format: int32
          nullable: true
          minimum: 0
          example: 70
        description:
          type: string
          nullable: true
          example: Description of my lovely music band
        genre:
          $ref: '#/components/schemas/MusicGenre'
          nullable: false
        label:
          $ref: '#/components/schemas/Label'
          nullable: true
    MusicBandAllFieldsSchema:
      allOf:
        - type: object
          required:
            - id
          properties:
            id:
              type: integer
              format: int64
              minimum: 0
              exclusiveMinimum: true
              example: 1
              description: unique identifier of music band
            date:
              type: string
              format: date-time
              nullable: false
              example: 2022-09-19T00:00:10Z
        - $ref: '#/components/schemas/MusicBandExtraFieldSchema'
    MusicBandsAllFieldsSchema:
      type: object
      properties:
        musicBandGetResponseDtos:
          type: array
          items:
            $ref: '#/components/schemas/MusicBandAllFieldsSchema'
        page:
          type: integer
          default: null
        pageSize:
          type: integer
          default: null
        totalPages:
          type: integer
          default: null
        totalCound:
          type: integer
          default: null
    Error:
      type: object
      required:
        - httpCode
        - message
        - time
      properties:
        code:
          type: integer
          format: int32
          example: 404
        message:
          type: string
          example: Not Found
        time:
          type: string
          format: date-time
          example: 2022-09-19T00:00:09Z
